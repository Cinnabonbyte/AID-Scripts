
// Checkout the repo examples to get an idea of other ways you can use scripting 
// https://github.com/latitudegames/Scripting/blob/master/examples

const modifier = (text) => {
  let modifiedText = text
  let stop = false
  const lowered = text.toLowerCase()

  if(!state.setup2){
    state.OnOff = true
    state.silent = false
    state.clearAN = false
    state.ANswitch = false
    state.clearOutput = false
    
    state.fixers = [
      "Wakako Okada",
      "Regina Jones",
      "Mr. Hands",
      "Muamar Reyes",
      "Sebastian Ibarra",
      "Dino Dinovic"
    ]
    
    
    state.items = [
      "a case containing a Militech M73 Mirage Gear helmet",
      "a case containing an Arasaka Ghost Suit",
      "a case containing a Dynalar Stealth Combat Suit",
      "a case containing a Kendachi M-33 Powersword",
      "a case containing a Kendachi MonoKatana",
      "a case containing a vintage Malorian Arms 3516 pistol",
      "a case containing a prototype cyberdeck",
      "a case containing an experimental infiltration program",
      "a case containing a G-58 Dian smart gun",
      "a case containing a set of Trauma Team armor",
      "a case containing a Militech Light Assault Rifle",
      "a case containing a Nekomata Sniper Rifle",
      "a case containing a DB-2 Tech Shotgun",
      "a case containing an HJSH-18 SMG",
      "a case containing a M2067 Light Machine Gun",
      "a case containing an Eagletech Compound Bow"
    ]
        
    
    state.quests = [
      "steal an illegal Braindance to send to the NCPD as evidence from ",
      "download the plans of an experimental EMP weapon from a terminal in ",
      "neutralize a high-priority target located in ",
      "terminate an experimental artificial intelligence located in ",
      "extract an imprisoned programmer from ",
      "steal biometric data from a terminal in ",
      "neutralize a cyberpsycho in ",
      "deliver a set of Armor to a client waiting for you in ",
      "steal blueprints for an advanced propulsion system from ",
      "destroy equipment used to make the drug \'glitter\' in ",
      "make a deal to purchase a mechanical spiderbot in "
    ]
    state.suitenumber = 2077
    state.locs = [
      "a Maelstrom hideout",
      "an abandoned facility",
      "a penthouse on floor 2077 of Mega Building H10",
      "a secret underwater facility",
      "an Arasaka facility",
      "the 'Ho-Oh Club' (Kabuki District)",
      "a drug den",
      "a strip club",
      "the Night Club \'Clouds\'",
      "an AV-9 Aerodyne (autonomous flying vehicle) transporting Militech personnel",
      " suite 2077 of Konpeki Plaza Hotel"
    ]
    
    state.secretdangers = [
      ". (aaa)",
      ". (bbb)",
      ". (ccc)",
      ". (ddd)",
      ". (eee)",
      ". (fff)"
    ]
    
    state.fixer = ""
    state.quest = ""
    state.loc = ""
    state.secretdanger = ""
    
    state.buffer = 0
    state.frequency = 1
    state.AN = ""
    
    state.noJob = "Current Job: None"
    state.currentjob = state.noJob
    
    if(memory.includes("Name:")){
      state.namePart1 = memory.substring(memory.indexOf("Name:")+6)
      state.namePart2 = state.namePart1.substring(state.namePart1.indexOf("\n"))
      state.name = state.namePart1.replace(state.namePart2, "")
      console.log(state.name)
    }
    state.defaultgreetings = [
      "\""+state.name+", I have a job for you. You will ",
      "\"Hey hey! Quick gig. You need to ",
      "\"Hello, "+state.name+". I need you to ",
      "\""+state.name+", got a job for ya. My client wants you to ",
      "\""+state.name+", I have a gig. You need to ",
      "\"Yo, "+state.name+"! Need you to "
    ]
    
    state.onJob = false
    state.choice = false
    
    state.hints = true
    state.msg = true
    
    if(state.frequency == 1){
      state.hint = "\nHint: A fixer should call in the next turn."
    }else if (state.frequency != 1){
      state.hint = "\nHint: A fixer should call in the next "+state.frequency+" turns."
    }

    updateMessage()
    state.setup2 = true
  }
  
  if(state.clearOutput == true){    
    stop = false
    //state.message = "Default Message"
    state.clearOutput = false
  }
  
  //update memory
  if(memory.includes("[")){
    state.memPart1 = memory.substring(0,memory.lastIndexOf("["))
    state.memPart2 = memory.substring(memory.indexOf("]")+1)
    state.memory = {context: state.memPart1+state.currentjob+state.memPart2}
  }
  
  //Radiant Quest Generator
  
  if(state.onJob == false && state.choice == false){
    if(state.OnOff == true){
      
      if(state.frequency == 1){
        state.hint = "\nHint: A fixer should call in the next turn."
      }else if (state.frequency != 1){
        state.hint = "\nHint: A fixer should call in the next "+state.frequency+" turns."
      }
      
      var randomizer = Math.floor(Math.random() * state.frequency+1)
      console.log(randomizer)
      if(randomizer == state.frequency){
        state.hint = "\nHint: "+state.fixer+" is contacting you. You will automatically accept the job in "+state.buffer+" turns, unless you type: /no"
        
        if(state.silent == false){
          modifiedText = text +"\n\nYour phone rings."
        }
        //Generate Quest (delete element?)
        
        state.suitenumber = Math.floor(Math.random() * 420)+1
        state.locs.splice(10,1, "in suite "+state.suitenumber+" of Konpeki Plaza Hotel")
        var indexF = Math.floor(Math.random() * state.fixers.length)
        var indexQ = Math.floor(Math.random() * state.quests.length)
        var indexL = Math.floor(Math.random() * state.locs.length)
        var indexSD = Math.floor(Math.random() * state.secretdangers.length)
        
        //random suite/floor
        state.floornumber = Math.floor(Math.random() * 100)+70
        state.suitenumber = Math.floor(Math.random() * 420)+1
        state.locs.splice(10,1, "suite "+state.suitenumber+" of Konpeki Plaza Hotel")
        state.locs.splice(2,1, " a penthouse on floor "+state.floornumber)
        
        //random gang
        state.gangs = ["Maelstrom", "Valentinos", "6th Street", "Tyger Claws", "Scavenger"]
        state.gang = state.gangs[Math.floor(Math.random() * state.gangs.length)]
        state.locs.splice(0,1, "a "+state.gang+" hideout")
        
        //random faction
        state.factions = ["Arasaka", "Militech", "Trauma Team", "Kang Tao", "SovOil"]
        state.factionsDet = ["an Arasaka", "a Militech", "a Trauma Team", "a Kang Tao", "a SovOil"]
        
        state.faction = state.factions[Math.floor(Math.random() * state.factions.length)]
        state.factionDet = state.factionsDet[Math.floor(Math.random() * state.factionsDet.length)]
        
        state.locs.splice(4,1, state.factionDet+" facility")
        state.locs.splice(9,1, "an AV-9 Aerodyne (autonomous flying vehicle) transporting "+state.faction+" personnel")
        
        //random items
        state.item = state.items[Math.floor(Math.random() * state.items.length)]
        state.quests.splice(7,1, "deliver "+state.item+" to a client waiting for you in ")
        console.log(state.quests)
        
        state.fixer = state.fixers[indexF]
        state.quest = state.quests[indexQ]
        state.loc = state.locs[indexL]
        state.secretdanger = state.secretdangers[indexSD]
        state.choice = true
        state.ANswitch = true
        state.AN = "Your fixer "+state.fixer+" is calling and has a job for you: "+state.defaultgreetings[indexF]+state.quest+state.loc
        
        state.buffer = 15
      }else if(state.randomizer != state.frequency){
        state.hint = "\nHint: A fixer should call in the next "+state.frequency+" turns."
      }
    }
  }
  
  //Automatic Accept
  
  
  if(state.buffer > 0 && state.choice == true){
    state.hint = "\nHint: "+state.fixer+" is contacting you. You will automatically accept the job in "+state.buffer+" turns, unless you type: /no"
    state.buffer--
  }else if(state.buffer == 0 && state.choice == true){
    state.hint = "\nHint: You accepted the job. To complete the job, type: /end"
    state.onJob = true
    state.currentjob = "Current Job: "+state.quest+state.loc
    state.choice = false
    state.AN = "Current Job: "+state.quest+state.loc//+state.secretdanger
  }
  
  
  updateMessage()
  
  //update memory
  if(memory.includes("[")){
    state.memPart1 = memory.substring(0,memory.lastIndexOf("["))
    state.memPart2 = memory.substring(memory.indexOf("]")+1)
    state.memory = {context: state.memPart1+state.currentjob+state.memPart2}
  }
  
  //DEBUG
  console.log(state.randomizer)
  console.log("Current Job: "+state.quest+state.loc)
  console.log(state.hints)
  console.log(state.msg)
  console.log(state.hud)
  
  // You must return an object with the text property defined.
  return { text: modifiedText }
}

// Don't modify this part
modifier(text)
